--- a/zellij-client/src/old_config_converter/old_config.rs
+++ b/zellij-client/src/old_config_converter/old_config.rs
@@ -234,7 +234,7 @@ fn options_yaml_to_options_kdl(options_y
         scrollback_editor,
         SCROLLBACK_EDITOR_DESCRIPTION,
         "scrollback_editor {:?}",
-        "// scrollback_editor \"/usr/bin/vim\""
+        "// scrollback_editor \"/opt/bin/vi\""
     );
     push_option!(
         mirror_session,
--- a/zellij-server/src/plugins/plugin_loader.rs
+++ b/zellij-server/src/plugins/plugin_loader.rs
@@ -796,9 +796,9 @@ impl<'a> PluginLoader<'a> {
         let mut store = get_store();
         let store_mut = &mut store;
         let dirs = vec![
-            ("/host".to_owned(), self.zellij_cwd.clone()),
-            ("/data".to_owned(), self.plugin_own_data_dir.clone()),
-            ("/tmp".to_owned(), ZELLIJ_TMP_DIR.clone()),
+            ("/opt/var/lib/zellij/host".to_owned(), self.zellij_cwd.clone()),
+            ("/opt/var/lib/zellij/data".to_owned(), self.plugin_own_data_dir.clone()),
+            ("/opt/var/lib/zellij/tmp".to_owned(), ZELLIJ_TMP_DIR.clone()),
         ];
         let dirs = dirs.into_iter().filter(|(_dir_name, dir)| {
             // note that this does not protect against TOCTOU errors
--- a/zellij-utils/src/consts.rs
+++ b/zellij-utils/src/consts.rs
@@ -15,8 +15,8 @@ pub const DEFAULT_SCROLL_BUFFER_SIZE: us
 pub static SCROLL_BUFFER_SIZE: OnceCell<usize> = OnceCell::new();
 pub static DEBUG_MODE: OnceCell<bool> = OnceCell::new();
 
-pub const SYSTEM_DEFAULT_CONFIG_DIR: &str = "/etc/zellij";
-pub const SYSTEM_DEFAULT_DATA_DIR_PREFIX: &str = system_default_data_dir();
+pub const SYSTEM_DEFAULT_CONFIG_DIR: &str = "/opt/etc/zellij";
+pub const SYSTEM_DEFAULT_DATA_DIR_PREFIX: &str = "/opt";
 
 pub static ZELLIJ_DEFAULT_THEMES: Dir = include_dir!("$CARGO_MANIFEST_DIR/assets/themes");
 
@@ -36,7 +36,7 @@ const fn system_default_data_dir() -> &'
     if let Some(data_dir) = std::option_env!("PREFIX") {
         data_dir
     } else {
-        "/usr"
+        "/opt"
     }
 }
 
